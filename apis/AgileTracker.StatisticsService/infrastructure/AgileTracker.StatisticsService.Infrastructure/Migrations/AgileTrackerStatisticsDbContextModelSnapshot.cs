// <auto-generated />
using System;
using AgileTracker.StatisticsService.Infrastructure.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgileTracker.StatisticsService.Infrastructure.Migrations
{
    [DbContext(typeof(AgileTrackerStatisticsDbContext))]
    partial class AgileTrackerStatisticsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AgileTracker.StatisticsService.Domain.Models.TaskEstimation.TaskEstimation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActuallyFinishedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedToFinishOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectGroupId");

                    b.ToTable("TaskEstimations");
                });

            modelBuilder.Entity("AgileTracker.StatisticsService.Infrastructure.Persistance.Models.ProjectGroupOwnership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ExternalProjectGroupId")
                        .HasColumnType("int");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExternalProjectGroupId")
                        .IsUnique();

                    b.ToTable("ProjectGroupOwnerships");
                });

            modelBuilder.Entity("AgileTracker.StatisticsService.Domain.Models.TaskEstimation.TaskEstimation", b =>
                {
                    b.HasOne("AgileTracker.StatisticsService.Infrastructure.Persistance.Models.ProjectGroupOwnership", null)
                        .WithMany()
                        .HasForeignKey("ProjectGroupId")
                        .HasPrincipalKey("ExternalProjectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
